plugins {
    id "org.sonarqube" version "6.3.1.5724"
    id "be.vbgn.ci-detect" version "0.5.0"
}

sonar {
    properties {
        property "sonar.projectKey", "xenit-eu_contentgrid-appserver"
        property "sonar.organization", "xenit-eu"
        property "sonar.host.url", "https://sonarcloud.io"
        if (ci.isPullRequest()) {
            properties["sonar.pullrequest.key"] = ci.getPullRequest()
            properties["sonar.pullrequest.branch"] = ci.branch
            properties["sonar.pullrequest.base"] = ci.pullRequestTargetBranch
        } else {
            // GIT_BRANCH allows to push from local development directly to SonarCloud
            properties["sonar.branch.name"] = ci.reference != null ? ci.reference : "$System.env.GIT_BRANCH"
        }
    }
}

allprojects {
    pluginManager.withPlugin("java-library") {
        apply plugin: 'jacoco'

        java {
            toolchain {
                languageVersion = JavaLanguageVersion.of(21)
            }
            withSourcesJar()
            withJavadocJar()
        }

        dependencies {
            api platform(project(":contentgrid-appserver-platform"))

            testImplementation 'org.junit.jupiter:junit-jupiter'
            testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        }

        tasks.named('test').configure {
            useJUnitPlatform()
            finalizedBy tasks.named('jacocoTestReport')
        }

        tasks.named('jacocoTestReport').configure {
            dependsOn tasks.named('test') // tests are required to run before generating the report
            reports {
                xml.required = true
                html.required = true
            }
        }
    }

    pluginManager.withPlugin('maven-publish') {
        apply from: "${rootDir}/gradle/publish.gradle"
    }
}